import streamlit as st
import pandas as pd
import datetime
import requests

# URL –≤–∞—à–µ–≥–æ API –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –ø–æ–∂–∞—Ä–æ–≤
API_URL = "http://localhost:8000/predict"

# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ URL
# query_params = st.experimental_get_query_params()
# date_param = query_params.get("day", [None])[0]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="FireWatch",
    page_icon="üî•",
    layout="wide",
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
with open("styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# –®–∞–ø–∫–∞ —Å–∞–π—Ç–∞
def header():
    st.markdown(
        """
        <div class="site-header">
            <div class="logo">üî• FireWatch</div>
            <div class="nav">
                <a class="nav-item" href="/">–ì–ª–∞–≤–Ω–∞—è</a>
                <a class="nav-item" href="/stack">–®—Ç–∞–±–µ–ª–∏</a>
                <a class="nav-item" href="/warehouse">–°–∫–ª–∞–¥—ã</a>
                <a class="nav-item" href="/shipments">–í—ã–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–≥—Ä—É–∑–∫–∏</a>
                <a class="nav-item" href="/location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</a>
                <a class="nav-item" href="/help">–°–ø—Ä–∞–≤–∫–∞</a>
            </div>
        </div>
        """,
        unsafe_allow_html=True,
    )

header()


# –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
today = datetime.date.today()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
st.title("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤–æ—Å–ø–ª–∞–º–µ–Ω–µ–Ω–∏—è –¥–Ω—è")
st.markdown("""<hr style="border:1px solid #e0e0e0; margin:20px 0;">""", unsafe_allow_html=True)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–∞—Ç—ã –∏–∑ URL
params = st.experimental_get_query_params()
date_param = params.get("day", [None])[0]

if date_param:
    try:
        y, m, d = map(int, date_param.split('-'))
        selected_date = datetime.date(y, m, d)
        # –ï—Å–ª–∏ –≤ URL –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä day=YYYY-MM-DD, –≤—ã–≤–æ–¥–∏–º —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–∂–∞—Ä—ã
        st.header(f"–ü–æ–∂–∞—Ä—ã –∑–∞ {date_param}")

        # –ó–∞–ø—Ä–æ—Å –∫ API
        try:
            resp = requests.get(f"{API_URL}/{y}/{m}/{d}")
            resp.raise_for_status()
            fires = resp.json()  # –æ–∂–∏–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ dict —Å –∫–ª—é—á–∞–º–∏ 'id', 'name', 'warehouse'
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            fires = []

        if not fires:
            st.info("–ù–µ—Ç –ø–æ–∂–∞—Ä–æ–≤ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å.")
        else:
            st.subheader("–°–ø–∏—Å–æ–∫ –ø–æ–∂–∞—Ä–æ–≤:")
            for fire in fires:
                sid = fire.get("stack_id")
                name = fire.get("stack_name", "‚Äî")
                wh = fire.get("warehouse_name", "‚Äî")
                weight = fire.get("weight", "‚Äî")
                st.markdown(
                    f"- üî• **–®—Ç–∞–±–µ–ª—å {name}** (–°–∫–ª–∞–¥ {wh}), "
                    f"–í–µ—Å –ø–æ –∞–∫—Ç—É: {weight} —Ç–æ–Ω–Ω. "
                    f"[–ü–æ–¥—Ä–æ–±–Ω–µ–µ (ID: {sid})](/shabel_detail?stack_id={sid})"
                )

    except Exception as e:
        st.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞: {e}")

    st.stop()
else:
    st.info("–î–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.")
